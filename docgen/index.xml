<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docgens on Cobra documentation</title>
    <link>https://spf13.github.io/cobra/docgen/</link>
    <description>Recent content in Docgens on Cobra documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://spf13.github.io/cobra/docgen/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://spf13.github.io/cobra/docgen/docgen/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://spf13.github.io/cobra/docgen/docgen/</guid>
      <description>Documentation generation Options  DisableAutoGenTag. You may set cmd.DisableAutoGenTag = true to entirely remove the auto generated string &amp;ldquo;Auto generated by spf13/cobra&amp;hellip;&amp;rdquo; from any documentation source.  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://spf13.github.io/cobra/docgen/man_docs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://spf13.github.io/cobra/docgen/man_docs/</guid>
      <description>Man Pages Generating man pages from a cobra command is incredibly easy. An example is as follows:
package main import ( &amp;#34;log&amp;#34; &amp;#34;github.com/spf13/cobra&amp;#34; &amp;#34;github.com/spf13/cobra/doc&amp;#34; ) func main() { cmd := &amp;amp;cobra.Command{ Use: &amp;#34;test&amp;#34;, Short: &amp;#34;my test program&amp;#34;, } header := &amp;amp;doc.GenManHeader{ Title: &amp;#34;MINE&amp;#34;, Section: &amp;#34;3&amp;#34;, } err := doc.GenManTree(cmd, header, &amp;#34;/tmp&amp;#34;) if err != nil { log.Fatal(err) } } That will get you a man page /tmp/test.3</description>
    </item>
    
    <item>
      <title></title>
      <link>https://spf13.github.io/cobra/docgen/md_docs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://spf13.github.io/cobra/docgen/md_docs/</guid>
      <description>Markdown Docs Generating Markdown pages from a cobra command is incredibly easy. An example is as follows:
package main import ( &amp;#34;log&amp;#34; &amp;#34;github.com/spf13/cobra&amp;#34; &amp;#34;github.com/spf13/cobra/doc&amp;#34; ) func main() { cmd := &amp;amp;cobra.Command{ Use: &amp;#34;test&amp;#34;, Short: &amp;#34;my test program&amp;#34;, } err := doc.GenMarkdownTree(cmd, &amp;#34;/tmp&amp;#34;) if err != nil { log.Fatal(err) } } That will get you a Markdown document /tmp/test.md
The entire command tree This program can actually generate docs for the kubectl command in the kubernetes project</description>
    </item>
    
    <item>
      <title></title>
      <link>https://spf13.github.io/cobra/docgen/rest_docs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://spf13.github.io/cobra/docgen/rest_docs/</guid>
      <description>ReStructured Text Docs Generating ReST pages from a cobra command is incredibly easy. An example is as follows:
package main import ( &amp;#34;log&amp;#34; &amp;#34;github.com/spf13/cobra&amp;#34; &amp;#34;github.com/spf13/cobra/doc&amp;#34; ) func main() { cmd := &amp;amp;cobra.Command{ Use: &amp;#34;test&amp;#34;, Short: &amp;#34;my test program&amp;#34;, } err := doc.GenReSTTree(cmd, &amp;#34;/tmp&amp;#34;) if err != nil { log.Fatal(err) } } That will get you a ReST document /tmp/test.rst
The entire command tree This program can actually generate docs for the kubectl command in the kubernetes project</description>
    </item>
    
    <item>
      <title></title>
      <link>https://spf13.github.io/cobra/docgen/yaml_docs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://spf13.github.io/cobra/docgen/yaml_docs/</guid>
      <description>Yaml Docs Generating yaml files from a cobra command is incredibly easy. An example is as follows:
package main import ( &amp;#34;log&amp;#34; &amp;#34;github.com/spf13/cobra&amp;#34; &amp;#34;github.com/spf13/cobra/doc&amp;#34; ) func main() { cmd := &amp;amp;cobra.Command{ Use: &amp;#34;test&amp;#34;, Short: &amp;#34;my test program&amp;#34;, } err := doc.GenYamlTree(cmd, &amp;#34;/tmp&amp;#34;) if err != nil { log.Fatal(err) } } That will get you a Yaml document /tmp/test.yaml
The entire command tree This program can actually generate docs for the kubectl command in the kubernetes project</description>
    </item>
    
  </channel>
</rss>